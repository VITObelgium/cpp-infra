macro(TEST_FEATURE name outputvar)
    if(${name} IN_LIST FEATURES)
        set(${outputvar} ON)
    else()
        set(${outputvar} OFF)
    endif()
endmacro()

macro(LIST_TO_STRING name outputvar)
    STRING(JOIN " " ${outputvar} "${name}")
endmacro()

include(vcpkg_acquire_msys)
include(vcpkg_assemble_compiler_flags)
include(vcpkg_add_to_path)
include(vcpkg_check_linkage)
include(vcpkg_clean_msbuild)
include(vcpkg_download_distfile)
include(vcpkg_extract_source_archive)
include(vcpkg_execute_required_process)
include(vcpkg_execute_required_process_repeat)
include(vcpkg_find_acquire_program)
include(vcpkg_fixup_cmake_targets)
include(vcpkg_fixup_pkgconfig_file)
include(vcpkg_from_git)
include(vcpkg_from_github)
include(vcpkg_from_gitlab)
include(vcpkg_from_bitbucket)
include(vcpkg_from_gitlab)
include(vcpkg_build_cmake)
include(vcpkg_build_msbuild)
include(vcpkg_build_qmake)
include(vcpkg_build_autotools)
include(vcpkg_install_cmake)
include(vcpkg_install_meson)
include(vcpkg_install_autotools)
include(vcpkg_install_msbuild)
include(vcpkg_configure_cmake)
include(vcpkg_configure_meson)
include(vcpkg_configure_qmake)
include(vcpkg_configure_autoconf)
include(vcpkg_apply_patches)
include(vcpkg_copy_pdbs)
include(vcpkg_copy_tool_dependencies)
include(vcpkg_get_program_files_32_bit)
include(vcpkg_get_program_files_platform_bitness)
include(vcpkg_get_windows_sdk)
include(vcpkg_replace_string)
include(vcpkg_test_cmake)
