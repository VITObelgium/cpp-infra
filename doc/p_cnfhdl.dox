/**

   \page p_cnfhdl Configuration Handler
 
   The configuration handler parses and validates the configuration provided by the user by means of an 
   XML file. This configuration is then translated into a class structure that is passed around in the 
   OPAQ application. The data model of this class structure is very similar to the one of the XML file 
   defining the configuration, and is illustrated in the following figure

   \image html config_data_model_500px.png "OPAQ configuration data model"
   \image latex config_data_model.eps "OPAQ configuration data model" width=12cm


   The <b>OpaqRun</b> class represents the configuration of an invocation of the OPAQ executable. It 
   contains a list of plugins that need to be loaded, a list of the components that need to be created 
   from those plugins, the time stamps and pollutant for which the workflow must run and the definitions
   of the forecast and mapping stages of the workflow. 
   
   A <b>Plugin</b> defines the configuration of a plugin by means of its name - which uniquely identifies the 
   plugin - and the path to its library. 

   A <b>Component</b> defines the configuration of a component by means of its name - which uniquely identifies 
   the component - a reference to the plugin from which it is created, and an XML element holding the components
   configuration.

   A <b>Pollutant</b> defines a pollutant by id - or code - and name.

   A <b>Stage</b> - which is common for forecast and mapping - defines the configuration of a stage by means of 
   its input and output component.  This representation of a stage is generic and will be handled as such by 
   the OPAQ engine. It is up to the user to configure sensible input and output components for forecast and 
   mapping stages. For example the input component for a forecast stage will be a ForecastDataProvider. There 
   are 2 types of stages. A Singleton represents the configuration of a stage consisting of a single model, 
   while an Ensemble represents the configuration of a stage that is composed of an ensemble of models. Apart 
   from the list of model components, an Ensemble also specifies the component to be used to merge the outputs 
   of these ensemble members into a single output.
*/
