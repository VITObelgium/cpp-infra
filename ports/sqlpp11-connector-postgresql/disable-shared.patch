diff -Naur a/src/CMakeLists.txt b/src/CMakeLists.txt
--- a/src/CMakeLists.txt	2018-05-14 21:51:57.000000000 +0200
+++ b/src/CMakeLists.txt	2018-06-18 21:04:19.000000000 +0200
@@ -28,6 +28,7 @@
     detail/prepared_statement_handle.h
 )
 
+if (NOT ENABLE_SHARED)
 add_library(sqlpp11-connector-postgresql STATIC
 	bind_result.cpp
 	connection.cpp
@@ -37,7 +38,7 @@
 	detail/prepared_statement_handle.cpp
 	result.cpp
 )
-
+else ()
 add_library(sqlpp11-connector-postgresql-dynamic SHARED
 	bind_result.cpp
 	connection.cpp
@@ -48,6 +49,7 @@
 	detail/dynamic_libpq.cpp
 	result.cpp
 )
+endif ()
 
 if (WIN32)
 	get_filename_component(POSTGRESQL_LIB_FILE ${PostgreSQL_LIBRARIES} NAME)
@@ -57,16 +59,17 @@
 	set(POSTGRESQL_LIB_FILE "lib${PostgreSQL_LIBRARIES}.so")
 endif()
 
+if (ENABLE_SHARED)
 target_compile_options(sqlpp11-connector-postgresql-dynamic INTERFACE -DSQLPP_DYNAMIC_LOADING)
 target_compile_options(sqlpp11-connector-postgresql-dynamic PRIVATE -DBUILDING_DLL -DSQLPP_DYNAMIC_LOADING -DSQLPP_DYNAMIC_LOADING_FILENAME=${POSTGRESQL_LIB_FILE})
-target_compile_features(sqlpp11-connector-postgresql PRIVATE cxx_auto_type)
 target_compile_features(sqlpp11-connector-postgresql-dynamic PRIVATE cxx_auto_type)
-
-target_link_libraries(sqlpp11-connector-postgresql PRIVATE sqlpp11 ${PostgreSQL_LIBRARIES})
 target_link_libraries(sqlpp11-connector-postgresql-dynamic sqlpp11 ${PostgreSQL_LIBRARIES})
-
-target_include_directories(sqlpp11-connector-postgresql PRIVATE ${sqlpp11_INCLUDE_DIRS} ${PostgreSQL_INCLUDE_DIRS} "../include/")
 target_include_directories(sqlpp11-connector-postgresql-dynamic PRIVATE ${sqlpp11_INCLUDE_DIRS} ${PostgreSQL_INCLUDE_DIRS} "../include/")
+else ()
+target_compile_features(sqlpp11-connector-postgresql PRIVATE cxx_auto_type)
+target_link_libraries(sqlpp11-connector-postgresql PRIVATE sqlpp11 ${PostgreSQL_LIBRARIES})
+target_include_directories(sqlpp11-connector-postgresql PRIVATE ${sqlpp11_INCLUDE_DIRS} ${PostgreSQL_INCLUDE_DIRS} "../include/")
+endif ()
 
 # The include directory should be PUBLIC. However, that would store an absolute path in the package configuration
 # so leave it PRIVATE and correct that in the ...Config.cmake file. This can be changed when the FindPostgreSQL.cmake got updated.
@@ -77,27 +80,29 @@
 set(sqlpp11-connector-postgresql_VERSION_MINOR 54)
 set(sqlpp11-connector-postgresql_VERSION_PATCH 0)
 set(sqlpp11-connector-postgresql_VERSION_STRING ${sqlpp11-connector-postgresql_VERSION_MAJOR}.${sqlpp11-connector-postgresql_VERSION_MINOR}.${sqlpp11-connector-postgresql_VERSION_PATCH})
+if (NOT ENABLE_SHARED)
 set_target_properties(sqlpp11-connector-postgresql PROPERTIES VERSION ${sqlpp11-connector-postgresql_VERSION_STRING}
-	        SOVERSION ${sqlpp11-connector-postgresql_VERSION_MAJOR})
-set_target_properties(sqlpp11-connector-postgresql-dynamic PROPERTIES VERSION ${sqlpp11-connector-postgresql_VERSION_STRING}
-            SOVERSION ${sqlpp11-connector-postgresql_VERSION_MAJOR})
+          SOVERSION ${sqlpp11-connector-postgresql_VERSION_MAJOR})
 
 set_property(TARGET sqlpp11-connector-postgresql APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
-        $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
-        $<INSTALL_INTERFACE:include>
-        )
-
-set_property(TARGET sqlpp11-connector-postgresql-dynamic APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
-        $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
-        $<INSTALL_INTERFACE:include>
-        )
+$<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
+$<INSTALL_INTERFACE:include>
+)
 
 install(TARGETS sqlpp11-connector-postgresql
         EXPORT postgresqlTargets
         DESTINATION lib)
-install(TARGETS sqlpp11-connector-postgresql-dynamic
-        EXPORT postgresqlTargets
-        DESTINATION lib)
+else ()
+set_property(TARGET sqlpp11-connector-postgresql-dynamic APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
+$<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
+$<INSTALL_INTERFACE:include>
+)
+set_target_properties(sqlpp11-connector-postgresql-dynamic PROPERTIES VERSION ${sqlpp11-connector-postgresql_VERSION_STRING}
+            SOVERSION ${sqlpp11-connector-postgresql_VERSION_MAJOR})
+            install(TARGETS sqlpp11-connector-postgresql-dynamic
+            EXPORT postgresqlTargets
+            DESTINATION lib)
+endif ()
 
 include(CMakePackageConfigHelpers)
 write_basic_package_version_file(
