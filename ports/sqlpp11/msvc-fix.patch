diff -Naur a/include/sqlpp11/char_sequence.h b/include/sqlpp11/char_sequence.h
--- a/include/sqlpp11/char_sequence.h	2018-07-06 07:46:32.000000000 +0200
+++ b/include/sqlpp11/char_sequence.h	2018-08-16 13:47:22.903383500 +0200
@@ -29,43 +29,42 @@
 
 #include <sqlpp11/detail/index_sequence.h>
 
-namespace sqlpp
+namespace sqlpp {
+template <char... Cs>
+struct char_sequence
 {
-  template <char... Cs>
-  struct char_sequence
-  {
     template <typename Context>
     static const char* char_ptr()
     {
-      static char s[] = {Cs..., '\0'};
-      return s;
+        static char s[] = {Cs..., '\0'};
+        return s;
     }
-  };
+};
 
-  template <char... Cs>
-  struct char_sequence<'!', Cs...>
-  {
+template <char... Cs>
+struct char_sequence<'!', Cs...>
+{
     template <typename Context>
     static const char* char_ptr()
     {
-      static char s[] = {decltype(get_quote_left(std::declval<Context>()))::value, Cs...,
-                         decltype(get_quote_right(std::declval<Context>()))::value, '\0'};
-      return s;
+        static char s[] = {decltype(get_quote_left(std::declval<Context>()))::value, Cs...,
+                           decltype(get_quote_right(std::declval<Context>()))::value, '\0'};
+        return s;
     }
-  };
+};
 
-  template <std::size_t N, const char (&s)[N], typename T>
-  struct make_char_sequence_impl;
+template <std::size_t N, const char* s, typename T>
+struct make_char_sequence_impl;
 
-  template <std::size_t N, const char (&s)[N], std::size_t... i>
-  struct make_char_sequence_impl<N, s, sqlpp::detail::index_sequence<i...>>
-  {
+template <std::size_t N, const char* s, std::size_t... i>
+struct make_char_sequence_impl<N, s, sqlpp::detail::index_sequence<i...>>
+{
     using type = char_sequence<s[i]...>;
-  };
+};
 
-  template <std::size_t N, const char (&Input)[N]>
-  using make_char_sequence =
-      typename make_char_sequence_impl<N, Input, sqlpp::detail::make_index_sequence<N - 1>>::type;
-}  // namespace sqlpp
+template <std::size_t N, const char* s>
+using make_char_sequence =
+    typename make_char_sequence_impl<N, s, sqlpp::detail::make_index_sequence<N - 1>>::type;
+} // namespace sqlpp
 
 #endif
