FIND_PATH(ZLIB_INCLUDE_DIR NAMES zlib.h)
FIND_LIBRARY(ZLIB_LIBRARY NAMES zlibstatic z)
FIND_LIBRARY(ZLIB_LIBRARY_DEBUG NAMES zlibstaticd z)

FIND_PATH(TINYXML_INCLUDE_DIR NAMES tinyxml.h)
FIND_LIBRARY(TINYXML_LIBRARY NAMES tinyxml)
FIND_LIBRARY(TINYXML_LIBRARY_DEBUG NAMES tinyxml_d)

FIND_LIBRARY(GZSTREAM_LIBRARY NAMES gzstream)
FIND_LIBRARY(GZSTREAM_LIBRARY_DEBUG NAMES gzstream_d)

IF (UNIX)
    SET(hdf5_DIR ${CMAKE_PREFIX_PATH}/share/cmake)
ENDIF ()

#FIND_PACKAGE(HDF5 NAMES hdf5 COMPONENTS C CPP static)

FIND_PACKAGE(fmt CONFIG REQUIRED)
FIND_PACKAGE(spdlog CONFIG REQUIRED)
FIND_PACKAGE(hdf5 CONFIG REQUIRED)

# We use our own version of FMT, let spdlog use the same version
ADD_DEFINITIONS(-DSPDLOG_FMT_EXTERNAL)

IF (MSVC)
    FIND_LIBRARY(GETOPT_LIBRARY NAMES wingetopt)
    FIND_LIBRARY(GETOPT_LIBRARY_DEBUG NAMES wingetopt_d)
    FIND_LIBRARY(DL_LIBRARY NAMES dl)
    FIND_LIBRARY(DL_LIBRARY_DEBUG NAMES dl_d)

    SET(EXTRA_LIBS Psapi Ws2_32)
ENDIF ()

FIND_PATH(EIGEN3_INCLUDE_DIR
    NAMES Eigen/Dense
    PATH_SUFFIXES eigen3
)

IF (NOT EIGEN3_INCLUDE_DIR)
    MESSAGE(FATAL_ERROR "Could not find eigen headers")
ENDIF ()

INCLUDE_DIRECTORIES(SYSTEM
    ${EIGEN3_INCLUDE_DIR}
    ${ZLIB_INCLUDE_DIR}
    ${TINYXML_INCLUDE_DIR}
)

ADD_DEFINITIONS(-DTIXML_USE_STL -D_XOPEN_SOURCE)

IF (MSVC)
    # suppress decorated name length exceeded warning
    ADD_DEFINITIONS(/wd4503)
ENDIF ()

ADD_SUBDIRECTORY(opaq_core)
ADD_SUBDIRECTORY(plugins)

IF (BUILD_UI)
    ADD_SUBDIRECTORY(ui)
ENDIF ()
